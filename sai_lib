#!/bin/bash

say() {
	tput setaf 4
	echo ":: $1"
	tput sgr0
}

ask() {
	tput setaf 6
	echo -n "=> $1  "
	tput sgr0
	read ans
}

yell() {
	tput setaf 1
	echo -n "!! $1  "
	tput sgr0
	echo "$1" >> $LOG
}

format_disks() {
	local _device=$1
	local _fstype=$2
	case $_fstype in
		swap)
			swapoff $_device
			mkswap $_device
			swapon $_device
			;;
		ext2)
			mke2fs $_device
			;;
		ext3)
			mke2fs -j $_device
			;;
		ext4)
			mke2fs -t ext4 $_device
			;;
	esac
	sleep 1
}

find_disks() {
	workdir="$PWD"
	cd /sys/block
	ls | grep '^[hs]d'
	cd "$workdir"
}

find_partitions() {
	workdir="$PWD"
	for disk in $(find_disks); do
		cd /sys/block/$disk
		for part in $disk*; do
			echo "$part"
		done
	done
	cd "$workdir"
}

disk_capacity() {
	fdisk -l $1 | sed -n '2p' | cut -d ' ' -f 3,4 | sed 's|,$||'
}

avail_disks() {
	for disk in $(find_disks); do
		echo "$disk: $(disk_capacity /dev/$disk)"
	done
}

# chroot_mount()
# prepares target system as a chroot
#
chroot_mount() {
	[ -e /mnt/sys ] || mkdir /mnt/sys
	[ -e /mnt/proc ] || mkdir /mnt/proc
	[ -e /mnt/dev ] || mkdir /mnt/dev
	mount -t sysfs sysfs /mnt/sys
	mount -t proc proc /mnt/proc
	mount -o bind /dev /mnt/dev
}

# chroot_umount()
# tears down chroot in target system
#
chroot_umount() {
	umount /mnt/proc /mnt/sys /mnt/dev
}

search_device() {
	grep ":$1:" $FS | cut -d : -f 1
}

generate_syslinux_menu() {
	sed -i -e '/#-\*/q' "$syslinuxmenu"
	
	cat >> $syslinuxmenu <<EOF

# (0) Arch Linux
LABEL arch
    MENU LABEL Arch Linux
    LINUX ../vmlinuz-linux
    APPEND root=$1 ro
    INITRD ../initramfs-linux.img

# (1) Arch Linux Fallback
LABEL archfallback
    MENU LABEL Arch Linux Fallback
    LINUX ../vmlinuz-linux
    APPEND root=$1 ro
    INITRD ../initramfs-linux-fallback.img

# (2) Windows
#LABEL windows
#COM32 chain.c32
#APPEND hd0 0

LABEL hdt
    MENU LABEL HDT (Hardware Detection Tool)
    COM32 hdt.c32

LABEL reboot
    MENU LABEL Reboot
    COM32 reboot.c32

LABEL off
    MENU LABEL Power Off
    COMBOOT poweroff.com
EOF
}
